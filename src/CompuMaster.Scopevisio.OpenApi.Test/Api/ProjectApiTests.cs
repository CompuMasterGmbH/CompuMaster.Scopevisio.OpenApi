/* 
 * Scopevisio OpenScope REST API
 *
 * <p>This is an interactive API reference for the Scopevisio REST API.</p><p>Below you will see the main sections of the API. Click each section in order to see the endpoints that are available in that category and use the 'Try it out' button to make API calls.</p><p>For endpoints that require authentication you can click the lock symbol in the top right of the endpoint description, which will take you to a login form.</p><h3>Authentication</h3><p>In order to use the \"Try it out\" function in Swagger you need your own Scopevisio account. If you have not set up a Scopevisio user account already you can do so <a href='https://www.scopevisio.com' target='_blank'>here</a>.</p><h3>Example Application</h3><p>We also have an example application you can reach <a href='../browser/index.html'> here </a>. Usage requires a Scopevisio account.</p><h3>Search Documentation</h3><p>Our documentation regarding <a href='../browser/index.html#!/searchscope'>search specification and paging  </a>.</p><h3>General Documentation</h3><p>Our general documentation can be found <a href='../browser/index.html#!/documentation'> here </a>.</p>
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@scopevisio.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CompuMaster.Scopevisio.OpenApi.Client;
using CompuMaster.Scopevisio.OpenApi.Api;
using CompuMaster.Scopevisio.OpenApi.Model;

namespace CompuMaster.Scopevisio.OpenApi.Test
{
    /// <summary>
    ///  Class for testing ProjectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProjectApiTests
    {
        private ProjectApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' ProjectApi
            //Assert.IsInstanceOf(typeof(ProjectApi), instance);
        }

        
        /// <summary>
        /// Test AddProjectFile
        /// </summary>
        [Test]
        public void AddProjectFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //TeamworkFileForm body = null;
            //instance.AddProjectFile(projectId, body);
            
        }
        
        /// <summary>
        /// Test AssignMailProject
        /// </summary>
        [Test]
        public void AssignMailProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //AssignMailForm body = null;
            //instance.AssignMailProject(projectId, body);
            
        }
        
        /// <summary>
        /// Test CreateIncomingMail
        /// </summary>
        [Test]
        public void CreateIncomingMailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IncomingMailForm body = null;
            //instance.CreateIncomingMail(body);
            
        }
        
        /// <summary>
        /// Test CreateProject
        /// </summary>
        [Test]
        public void CreateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProjectForm body = null;
            //instance.CreateProject(body);
            
        }
        
        /// <summary>
        /// Test CreateProjectComment
        /// </summary>
        [Test]
        public void CreateProjectCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //BlogEntryForm body = null;
            //instance.CreateProjectComment(projectId, body);
            
        }
        
        /// <summary>
        /// Test CreateProjectEmployee
        /// </summary>
        [Test]
        public void CreateProjectEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //ProjectEmployeeForm body = null;
            //instance.CreateProjectEmployee(projectId, body);
            
        }
        
        /// <summary>
        /// Test CreateSalesProject
        /// </summary>
        [Test]
        public void CreateSalesProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SalesProjectForm body = null;
            //instance.CreateSalesProject(body);
            
        }
        
        /// <summary>
        /// Test CreateTimeEntry
        /// </summary>
        [Test]
        public void CreateTimeEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TimeEntryForm body = null;
            //instance.CreateTimeEntry(body);
            
        }
        
        /// <summary>
        /// Test GetAllTimEntries
        /// </summary>
        [Test]
        public void GetAllTimEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //var response = instance.GetAllTimEntries(body);
            //Assert.IsInstanceOf(typeof(Object), response, "response is Object");
        }
        
        /// <summary>
        /// Test GetBlogEntriesByProjectId
        /// </summary>
        [Test]
        public void GetBlogEntriesByProjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //string fields = null;
            //instance.GetBlogEntriesByProjectId(projectId, fields);
            
        }
        
        /// <summary>
        /// Test GetProject
        /// </summary>
        [Test]
        public void GetProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string fields = null;
            //instance.GetProject(id, fields);
            
        }
        
        /// <summary>
        /// Test GetProjectEmployee
        /// </summary>
        [Test]
        public void GetProjectEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long employeeId = null;
            //long projectId = null;
            //string fields = null;
            //instance.GetProjectEmployee(employeeId, projectId, fields);
            
        }
        
        /// <summary>
        /// Test GetProjectEmployees
        /// </summary>
        [Test]
        public void GetProjectEmployeesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //string body = null;
            //instance.GetProjectEmployees(projectId, body);
            
        }
        
        /// <summary>
        /// Test GetProjectResources
        /// </summary>
        [Test]
        public void GetProjectResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectStartFrom = null;
            //long projectStartTo = null;
            //string searchSpecification = null;
            //var response = instance.GetProjectResources(projectStartFrom, projectStartTo, searchSpecification);
            //Assert.IsInstanceOf(typeof(Object), response, "response is Object");
        }
        
        /// <summary>
        /// Test GetProjectRevenue
        /// </summary>
        [Test]
        public void GetProjectRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectStartFrom = null;
            //long projectStartTo = null;
            //long revenueType = null;
            //string searchSpecification = null;
            //var response = instance.GetProjectRevenue(projectStartFrom, projectStartTo, revenueType, searchSpecification);
            //Assert.IsInstanceOf(typeof(Object), response, "response is Object");
        }
        
        /// <summary>
        /// Test GetProjects
        /// </summary>
        [Test]
        public void GetProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //instance.GetProjects(body);
            
        }
        
        /// <summary>
        /// Test GetTimeEntry
        /// </summary>
        [Test]
        public void GetTimeEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string fields = null;
            //instance.GetTimeEntry(id, fields);
            
        }
        
        /// <summary>
        /// Test UpdateProject
        /// </summary>
        [Test]
        public void UpdateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //ProjectForm body = null;
            //instance.UpdateProject(id, body);
            
        }
        
        /// <summary>
        /// Test UpdateProjectEmployee
        /// </summary>
        [Test]
        public void UpdateProjectEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //long employeeId = null;
            //ProjectEmployeeForm body = null;
            //instance.UpdateProjectEmployee(projectId, employeeId, body);
            
        }
        
        /// <summary>
        /// Test UpdateSalesProject
        /// </summary>
        [Test]
        public void UpdateSalesProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //SalesProjectForm body = null;
            //instance.UpdateSalesProject(id, body);
            
        }
        
        /// <summary>
        /// Test UpdateTimeEntry
        /// </summary>
        [Test]
        public void UpdateTimeEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //TimeEntryForm body = null;
            //instance.UpdateTimeEntry(id, body);
            
        }
        
    }

}
