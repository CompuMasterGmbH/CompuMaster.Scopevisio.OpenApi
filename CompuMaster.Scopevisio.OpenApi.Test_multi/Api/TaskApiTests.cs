/* 
 * Scopevisio OpenScope REST API
 *
 * <p>This is an interactive API reference for the Scopevisio REST API.</p><p>Below you will see the main sections of the API. Click each section in order to see the endpoints that are available in that category and use the 'Try it out' button to make API calls.</p><p>For endpoints that require authentication you can click the lock symbol in the top right of the endpoint description, which will take you to a login form.</p><h3>Authentication</h3><p>In order to use the \"Try it out\" function in Swagger you need your own Scopevisio account. If you have not set up a Scopevisio user account already you can do so <a href='https://www.scopevisio.com' target='_blank'>here</a>.</p><h3>Example Application</h3><p>We also have an example application you can reach <a href='../browser/index.html'> here </a>. Usage requires a Scopevisio account.</p><h3>Search Documentation</h3><p>Our documentation regarding <a href='../browser/index.html#!/searchscope'>search specification and paging  </a>.</p><h3>General Documentation</h3><p>Our general documentation can be found <a href='../browser/index.html#!/documentation'> here </a>.</p>
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@scopevisio.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CompuMaster.Scopevisio.OpenApi.Client;
using CompuMaster.Scopevisio.OpenApi.Api;
using CompuMaster.Scopevisio.OpenApi.Model;

namespace CompuMaster.Scopevisio.OpenApi.Test
{
    /// <summary>
    ///  Class for testing TaskApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [Obsolete("TODO: Unstable or incomplete implementation", false)]
    public class TaskApiTests
    {
        private TaskApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaskApi(new TestConfig());
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf(typeof(TaskApi), instance);
        }

        
        /// <summary>
        /// Test AddTaskFile
        /// </summary>
        [Test]
        public void AddTaskFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long taskId = null;
            //TeamworkFileForm body = null;
            //instance.AddTaskFile(taskId, body);
            
        }
        
        /// <summary>
        /// Test AssignMailTask
        /// </summary>
        [Test]
        public void AssignMailTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long taskId = null;
            //AssignMailForm body = null;
            //instance.AssignMailTask(taskId, body);
            
        }
        
        /// <summary>
        /// Test CreateSubtask
        /// </summary>
        [Test]
        public void CreateSubtaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubtaskForm body = null;
            //instance.CreateSubtask(body);
            
        }
        
        /// <summary>
        /// Test CreateTask
        /// </summary>
        [Test]
        public void CreateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TaskForm body = null;
            //instance.CreateTask(body);
            
        }
        
        /// <summary>
        /// Test CreateTaskComment
        /// </summary>
        [Test]
        public void CreateTaskCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long taskId = null;
            //BlogEntryForm body = null;
            //instance.CreateTaskComment(taskId, body);
            
        }
        
        /// <summary>
        /// Test GetSubtasks
        /// </summary>
        [Test]
        public void GetSubtasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long taskId = null;
            //instance.GetSubtasks(taskId);
            
        }
        
        /// <summary>
        /// Test GetTask
        /// </summary>
        [Test]
        public void GetTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //string fields = null;
            //instance.GetTask(id, fields);
            
        }
        
        /// <summary>
        /// Test GetTaskComments
        /// </summary>
        [Test]
        public void GetTaskCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long taskId = null;
            //string fields = null;
            //instance.GetTaskComments(taskId, fields);
            
        }
        
        /// <summary>
        /// Test GetTasks
        /// </summary>
        [Test]
        public void GetTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //instance.GetTasks(body);
            
        }
        
        /// <summary>
        /// Test UpdateTask
        /// </summary>
        [Test]
        public void UpdateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long id = null;
            //TaskForm body = null;
            //instance.UpdateTask(id, body);
            
        }
        
    }

}
