// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class TokenResponse
    {
        /// <summary>
        /// Initializes a new instance of the TokenResponse class.
        /// </summary>
        public TokenResponse() { }

        /// <summary>
        /// Initializes a new instance of the TokenResponse class.
        /// </summary>
        public TokenResponse(string accessToken, long expiresIn, string refreshToken, string uid, long organisationId, string organisationName, string teamworkTenantId = default(string))
        {
            AccessToken = accessToken;
            ExpiresIn = expiresIn;
            RefreshToken = refreshToken;
            Uid = uid;
            OrganisationId = organisationId;
            OrganisationName = organisationName;
            TeamworkTenantId = teamworkTenantId;
        }
        /// <summary>
        /// Static constructor for TokenResponse class.
        /// </summary>
        static TokenResponse()
        {
            TokenType = "Bearer";
        }

        /// <summary>
        /// Access token
        /// </summary>
        [JsonProperty(PropertyName = "access_token")]
        public string AccessToken { get; set; }

        /// <summary>
        /// The remaining lifetime of the access token in seconds
        /// </summary>
        [JsonProperty(PropertyName = "expires_in")]
        public long ExpiresIn { get; set; }

        /// <summary>
        /// Refresh token
        /// </summary>
        [JsonProperty(PropertyName = "refresh_token")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// User ID
        /// </summary>
        [JsonProperty(PropertyName = "uid")]
        public string Uid { get; set; }

        /// <summary>
        /// Organisation ID
        /// </summary>
        [JsonProperty(PropertyName = "organisationId")]
        public long OrganisationId { get; set; }

        /// <summary>
        /// Organisation Name
        /// </summary>
        [JsonProperty(PropertyName = "organisationName")]
        public string OrganisationName { get; set; }

        /// <summary>
        /// Teamwork tenant ID
        /// </summary>
        [JsonProperty(PropertyName = "teamworkTenantId")]
        public string TeamworkTenantId { get; set; }

        /// <summary>
        /// Token type
        /// </summary>
        [JsonProperty(PropertyName = "token_type")]
        public static string TokenType { get; private set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (AccessToken == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccessToken");
            }
            if (RefreshToken == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RefreshToken");
            }
            if (Uid == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Uid");
            }
            if (OrganisationName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OrganisationName");
            }
        }
    }
}
