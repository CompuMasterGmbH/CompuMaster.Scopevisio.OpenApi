/* 
 * Scopevisio OpenScope REST API
 *
 * <p>This is an interactive API reference for the Scopevisio REST API.</p><p>Below you will see the main sections of the API. Click each section in order to see the endpoints that are available in that category and use the 'Try it out' button to make API calls.</p><p>For endpoints that require authentication you can click the lock symbol in the top right of the endpoint description, which will take you to a login form.</p><h3>Authentication</h3><p>In order to use the \"Try it out\" function in Swagger you need your own Scopevisio account. If you have not set up a Scopevisio user account already you can do so <a href='https://www.scopevisio.com' target='_blank'>here</a>.</p><h3>Example Application</h3><p>We also have an example application you can reach <a href='../browser/index.html'> here </a>. Usage requires a Scopevisio account.</p><h3>Search Documentation</h3><p>Our documentation regarding <a href='../browser/index.html#!/searchscope'>search specification and paging  </a>.</p><h3>General Documentation</h3><p>Our general documentation can be found <a href='../browser/index.html#!/documentation'> here </a>.</p>
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@scopevisio.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ContactPropertyForm
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContactPropertyFormTests
    {
        // TODO uncomment below to declare an instance variable for ContactPropertyForm
        //private ContactPropertyForm instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ContactPropertyForm
            //instance = new ContactPropertyForm();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContactPropertyForm
        /// </summary>
        [Test]
        public void ContactPropertyFormInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ContactPropertyForm
            //Assert.IsInstanceOf(typeof(ContactPropertyForm), instance);
        }


        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Subtype'
        /// </summary>
        [Test]
        public void SubtypeTest()
        {
            // TODO unit test for the property 'Subtype'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'ValidFrom'
        /// </summary>
        [Test]
        public void ValidFromTest()
        {
            // TODO unit test for the property 'ValidFrom'
        }
        /// <summary>
        /// Test the property 'ValidTo'
        /// </summary>
        [Test]
        public void ValidToTest()
        {
            // TODO unit test for the property 'ValidTo'
        }
        /// <summary>
        /// Test the property 'EmployeeDomain'
        /// </summary>
        [Test]
        public void EmployeeDomainTest()
        {
            // TODO unit test for the property 'EmployeeDomain'
        }
        /// <summary>
        /// Test the property 'SpheresDisplay'
        /// </summary>
        [Test]
        public void SpheresDisplayTest()
        {
            // TODO unit test for the property 'SpheresDisplay'
        }
        /// <summary>
        /// Test the property 'EmployeeFilterDisplay'
        /// </summary>
        [Test]
        public void EmployeeFilterDisplayTest()
        {
            // TODO unit test for the property 'EmployeeFilterDisplay'
        }
        /// <summary>
        /// Test the property 'PermissionType'
        /// </summary>
        [Test]
        public void PermissionTypeTest()
        {
            // TODO unit test for the property 'PermissionType'
        }
        /// <summary>
        /// Test the property 'ReadPermissionProfiles'
        /// </summary>
        [Test]
        public void ReadPermissionProfilesTest()
        {
            // TODO unit test for the property 'ReadPermissionProfiles'
        }
        /// <summary>
        /// Test the property 'ReadPermissionLogins'
        /// </summary>
        [Test]
        public void ReadPermissionLoginsTest()
        {
            // TODO unit test for the property 'ReadPermissionLogins'
        }
        /// <summary>
        /// Test the property 'WritePermissionProfiles'
        /// </summary>
        [Test]
        public void WritePermissionProfilesTest()
        {
            // TODO unit test for the property 'WritePermissionProfiles'
        }
        /// <summary>
        /// Test the property 'WritePermissionLogins'
        /// </summary>
        [Test]
        public void WritePermissionLoginsTest()
        {
            // TODO unit test for the property 'WritePermissionLogins'
        }

    }

}
