// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenScopeApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ProjectEmployeeForm
    {
        /// <summary>
        /// Initializes a new instance of the ProjectEmployeeForm class.
        /// </summary>
        public ProjectEmployeeForm() { }

        /// <summary>
        /// Initializes a new instance of the ProjectEmployeeForm class.
        /// </summary>
        public ProjectEmployeeForm(long contactId, string contactSphere = default(string), string role = default(string), double? hourlyRate = default(double?), double? dailyRate = default(double?))
        {
            ContactId = contactId;
            ContactSphere = contactSphere;
            Role = role;
            HourlyRate = hourlyRate;
            DailyRate = dailyRate;
        }

        /// <summary>
        /// contact id of the given project employee
        /// </summary>
        [JsonProperty(PropertyName = "contactId")]
        public long ContactId { get; set; }

        /// <summary>
        /// contactSphere. Possible values include: 'Alle', 'Lead',
        /// 'Interessent', 'Kunde', 'Lieferant', 'Debitor', 'Kreditor',
        /// 'Mitarbeiter'
        /// </summary>
        [JsonProperty(PropertyName = "contactSphere")]
        public string ContactSphere { get; set; }

        /// <summary>
        /// role in the project, please chek your catalog in the Scopevisio
        /// desktop client for allowable values. Possible values include:
        /// 'Auftraggeber', 'Projektleitung', 'Projektteammitglieder',
        /// 'Lenkungsausschuss', 'Projektservicestelle',
        /// 'Arbeitspaket-Leitung', 'Projektassistenz', 'Project Management
        /// Office', 'Projektmanagement', 'Technische Koordination',
        /// 'Fachliche Koordination', 'Analyseleitung',
        /// 'Entwicklungsteamleitung', 'Software Architekt',
        /// 'Testverantwortlicher', 'QS Verantwortlicher',
        /// 'Betriebsverantwortlicher'
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// hourly rate
        /// </summary>
        [JsonProperty(PropertyName = "hourlyRate")]
        public double? HourlyRate { get; set; }

        /// <summary>
        /// daily rate
        /// </summary>
        [JsonProperty(PropertyName = "dailyRate")]
        public double? DailyRate { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
