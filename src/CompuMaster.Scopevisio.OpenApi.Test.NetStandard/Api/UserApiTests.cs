/* 
 * Scopevisio OpenScope REST API
 *
 * <p>This is an interactive API reference for the Scopevisio REST API.</p><p>Below you will see the main sections of the API. Click each section in order to see the endpoints that are available in that category and use the 'Try it out' button to make API calls.</p><p>For endpoints that require authentication you can click the lock symbol in the top right of the endpoint description, which will take you to a login form.</p><h3>Authentication</h3><p>In order to use the \"Try it out\" function in Swagger you need your own Scopevisio account. If you have not set up a Scopevisio user account already you can do so <a href='https://www.scopevisio.com' target='_blank'>here</a>.</p><h3>Example Application</h3><p>We also have an example application you can reach <a href='../browser/index.html'> here </a>. Usage requires a Scopevisio account.</p><h3>Search Documentation</h3><p>Our documentation regarding <a href='../browser/index.html#!/searchscope'>search specification and paging  </a>.</p><h3>General Documentation</h3><p>Our general documentation can be found <a href='../browser/index.html#!/documentation'> here </a>.</p>
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@scopevisio.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CompuMaster.Scopevisio.OpenApi.Client;
using CompuMaster.Scopevisio.OpenApi.Api;
using CompuMaster.Scopevisio.OpenApi.Model;

namespace CompuMaster.Scopevisio.OpenApi.Test
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [Obsolete("TODO: Unstable or incomplete implementation", false)]
    public class UserApiTests
    {
        private UserApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UserApi(new TestConfig());
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf(typeof(UserApi), instance);
        }

        
        /// <summary>
        /// Test CreateUsers
        /// </summary>
        [Test]
        public void CreateUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<UserForm> body = null;
            //instance.CreateUsers(body);
            
        }
        
        /// <summary>
        /// Test DeleteUser
        /// </summary>
        [Test]
        public void DeleteUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uidOrEmail = null;
            //instance.DeleteUser(uidOrEmail);
            
        }
        
        /// <summary>
        /// Test GetUser
        /// </summary>
        [Test]
        public void GetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uidOrEmail = null;
            //instance.GetUser(uidOrEmail);
            
        }
        
        /// <summary>
        /// Test GetUsers
        /// </summary>
        [Test]
        public void GetUsersTest()
        {
            bool? onlyActive = null;
            try
            {
                Client.ApiResponse<List<Model.User>> result = instance.GetUsersWithHttpInfo(onlyActive);
                Assert.AreEqual((int)System.Net.HttpStatusCode.OK, result.StatusCode);

                System.Console.WriteLine("RAW JSON");
                System.Console.WriteLine(result.RawJsonContent);
                System.Console.WriteLine("/RAW JSON\r\n");

                System.Console.WriteLine("User:ToString()");
                System.Console.WriteLine(result.Data.ToString());
                System.Console.WriteLine("/User:ToString()\r\n");

                Assert.NotZero(result.Data.Count);
                Assert.IsNotEmpty(result.Data[0].Uid);
                Assert.IsNotEmpty(result.Data[0].LastName);
                Assert.IsNotEmpty(result.Data[0].Login);
                int AllContactsCount = result.Data.Count;
            }
            catch (Client.ApiException e)
            {
                Assert.AreEqual(403, e.ErrorCode); //Error calling GetUsers: {"timestamp":1589404582218,"status":403,"url":"https://appload.scopevisio.com/rest/users","message":"Missing profile. Require read access for any of: enterprise.Users"}
            }
        }
        
        /// <summary>
        /// Test UpdateUsers
        /// </summary>
        [Test]
        public void UpdateUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<UserForm> body = null;
            //instance.UpdateUsers(body);
            
        }
        
    }

}
