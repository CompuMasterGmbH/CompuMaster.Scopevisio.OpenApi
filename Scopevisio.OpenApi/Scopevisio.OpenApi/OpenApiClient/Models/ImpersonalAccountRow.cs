// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenScopeApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class ImpersonalAccountRow
    {
        /// <summary>
        /// Initializes a new instance of the ImpersonalAccountRow class.
        /// </summary>
        public ImpersonalAccountRow() { }

        /// <summary>
        /// Initializes a new instance of the ImpersonalAccountRow class.
        /// </summary>
        public ImpersonalAccountRow(string number, string name, string type, string category = default(string), string vatCode = default(string), string vatKey = default(string), bool? fixVatKey = default(bool?), bool? deactivated = default(bool?), bool? directPosting = default(bool?), string discountAccount = default(string), bool? isFinanceAccount = default(bool?), bool? subjectToClearing = default(bool?), IList<DimensionForm> dimensions = default(IList<DimensionForm>))
        {
            Number = number;
            Name = name;
            Type = type;
            Category = category;
            VatCode = vatCode;
            VatKey = vatKey;
            FixVatKey = fixVatKey;
            Deactivated = deactivated;
            DirectPosting = directPosting;
            DiscountAccount = discountAccount;
            IsFinanceAccount = isFinanceAccount;
            SubjectToClearing = subjectToClearing;
            Dimensions = dimensions;
        }

        /// <summary>
        /// impersonal account number
        /// </summary>
        [JsonProperty(PropertyName = "number")]
        public string Number { get; set; }

        /// <summary>
        /// impersonal account name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// The account type (Kontoart). Possible values include: 'Aktiv',
        /// 'Passiv', 'Kosten', 'Erlöse', 'Aktiv/Passiv', 'Sonstige Konten'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// The account category (Kontokennzeichen). Possible values include:
        /// 'Andere Konten', 'Forderungen aus Lieferungen und Leistungen',
        /// 'Umsatzsteuer', 'Verbindlichkeiten aus Lieferungen und
        /// Leistungen', 'Vorsteuer'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// vatCode (Steuerkennzeichen), the allowable values are the standard
        /// values for SKR03, see vat matrix in Scopevisio client if you have
        /// different settings in your chart of accounts. Possible values
        /// include: 'INL', 'EUmID', 'EUoID', 'Drittland'
        /// </summary>
        [JsonProperty(PropertyName = "vatCode")]
        public string VatCode { get; set; }

        /// <summary>
        /// vatKey (Steuerschlüssel), the allowable values are the standard
        /// values for SKR03, see vat matrix in Scopevisio client if you have
        /// different settings in your chart of accounts. Possible values
        /// include: 'B19', 'B7', 'BoV19', 'E19', 'E7', 'EoV7', 'L19',
        /// 'LoV19', 'LoV7', 'SL19', 'SLoV19', 'U19', 'U7', 'V19', 'V7'
        /// </summary>
        [JsonProperty(PropertyName = "vatKey")]
        public string VatKey { get; set; }

        /// <summary>
        /// is the vat key fixed or can another vat key be used when post to
        /// this account
        /// </summary>
        [JsonProperty(PropertyName = "fixVatKey")]
        public bool? FixVatKey { get; set; }

        /// <summary>
        /// it is not possible to post to this account
        /// </summary>
        [JsonProperty(PropertyName = "deactivated")]
        public bool? Deactivated { get; set; }

        /// <summary>
        /// is direct posting possible
        /// </summary>
        [JsonProperty(PropertyName = "directPosting")]
        public bool? DirectPosting { get; set; }

        /// <summary>
        /// discount account
        /// </summary>
        [JsonProperty(PropertyName = "discountAccount")]
        public string DiscountAccount { get; set; }

        /// <summary>
        /// is finance account
        /// </summary>
        [JsonProperty(PropertyName = "isFinanceAccount")]
        public bool? IsFinanceAccount { get; set; }

        /// <summary>
        /// is it possible to use the account for clearing
        /// </summary>
        [JsonProperty(PropertyName = "subjectToClearing")]
        public bool? SubjectToClearing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dimensions")]
        public IList<DimensionForm> Dimensions { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Number == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Number");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
