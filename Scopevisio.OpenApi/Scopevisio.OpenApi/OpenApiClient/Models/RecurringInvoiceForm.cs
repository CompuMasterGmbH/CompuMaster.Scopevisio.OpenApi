// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenScopeApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class RecurringInvoiceForm
    {
        /// <summary>
        /// Initializes a new instance of the RecurringInvoiceForm class.
        /// </summary>
        public RecurringInvoiceForm() { }

        /// <summary>
        /// Initializes a new instance of the RecurringInvoiceForm class.
        /// </summary>
        public RecurringInvoiceForm(long validFrom, long validTo, string frequency, long nextInvoiceDate)
        {
            ValidFrom = validFrom;
            ValidTo = validTo;
            Frequency = frequency;
            NextInvoiceDate = nextInvoiceDate;
        }

        /// <summary>
        /// validFrom (gültig von), the validFrom as epoch timestamp in
        /// milliseconds. The time of the day has no importance for the
        /// validFrom date.
        /// </summary>
        [JsonProperty(PropertyName = "validFrom")]
        public long ValidFrom { get; set; }

        /// <summary>
        /// validTo (gültig bis), the validTo as epoch timestamp in
        /// milliseconds. The time of the day has no importance for the
        /// validTo date.
        /// </summary>
        [JsonProperty(PropertyName = "validTo")]
        public long ValidTo { get; set; }

        /// <summary>
        /// frequency. Possible values include: 'daily', 'weekly', 'monthly',
        /// 'bimonthly', 'quarterly', 'half-yearly', 'yearly'
        /// </summary>
        [JsonProperty(PropertyName = "frequency")]
        public string Frequency { get; set; }

        /// <summary>
        /// nextInvoiceDate (nächste Rechnung), the nextInvoiceDate as epoch
        /// timestamp in milliseconds. The time of the day has no importance
        /// for the nextInvoiceDate date.
        /// </summary>
        [JsonProperty(PropertyName = "nextInvoiceDate")]
        public long NextInvoiceDate { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Frequency == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Frequency");
            }
        }
    }
}
