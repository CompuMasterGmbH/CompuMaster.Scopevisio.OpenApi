// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenScopeApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class DatevExportSettingsForm
    {
        /// <summary>
        /// Initializes a new instance of the DatevExportSettingsForm class.
        /// </summary>
        public DatevExportSettingsForm() { }

        /// <summary>
        /// Initializes a new instance of the DatevExportSettingsForm class.
        /// </summary>
        public DatevExportSettingsForm(long? fromPostingDateTs = default(long?), long? toPostingDateTs = default(long?), long? fromCreationDateTs = default(long?), long? toCreationDateTs = default(long?), string dimension1 = default(string), string dimension2 = default(string), string textConfiguration = default(string), string field1Configuration = default(string), string exportStrategy = default(string), bool? skipCancellations = default(bool?), bool? vatMatrixDatevKeys = default(bool?))
        {
            FromPostingDateTs = fromPostingDateTs;
            ToPostingDateTs = toPostingDateTs;
            FromCreationDateTs = fromCreationDateTs;
            ToCreationDateTs = toCreationDateTs;
            Dimension1 = dimension1;
            Dimension2 = dimension2;
            TextConfiguration = textConfiguration;
            Field1Configuration = field1Configuration;
            ExportStrategy = exportStrategy;
            SkipCancellations = skipCancellations;
            VatMatrixDatevKeys = vatMatrixDatevKeys;
        }

        /// <summary>
        /// fromPostingDateTs. Timestamp in milliseconds to set the posting
        /// date from. If not set the first day of the current year is set.
        /// </summary>
        [JsonProperty(PropertyName = "fromPostingDateTs")]
        public long? FromPostingDateTs { get; set; }

        /// <summary>
        /// toPostingDateTs. Timestamp in milliseconds to set the posting date
        /// to. If not set the last day of the current year is set.
        /// </summary>
        [JsonProperty(PropertyName = "toPostingDateTs")]
        public long? ToPostingDateTs { get; set; }

        /// <summary>
        /// fromCreationDateTs. Timestamp in milliseconds to set the creation
        /// date from. Both fromCreationDateTs and toCreationDateTs must be
        /// provided if creation date filtering needed.
        /// </summary>
        [JsonProperty(PropertyName = "fromCreationDateTs")]
        public long? FromCreationDateTs { get; set; }

        /// <summary>
        /// toCreationDateTs. Timestamp in milliseconds to set the creation
        /// date to. Both fromCreationDateTs and toCreationDateTs must be
        /// provided if creation date filtering needed.
        /// </summary>
        [JsonProperty(PropertyName = "toCreationDateTs")]
        public long? ToCreationDateTs { get; set; }

        /// <summary>
        /// dimension1. The name of the dimension which should be exported to
        /// Kost1 in DATEV.
        /// </summary>
        [JsonProperty(PropertyName = "dimension1")]
        public string Dimension1 { get; set; }

        /// <summary>
        /// dimension2. The name of the dimension which should be exported to
        /// Kost2 in DATEV.
        /// </summary>
        [JsonProperty(PropertyName = "dimension2")]
        public string Dimension2 { get; set; }

        /// <summary>
        /// textConfiguration. The name of the text field which should be
        /// exported to Text in DATEV. If not set posting text(Belegtext) is
        /// used. Possible values include: 'Belegtext', 'Erste Buchungszeile'
        /// </summary>
        [JsonProperty(PropertyName = "textConfiguration")]
        public string TextConfiguration { get; set; }

        /// <summary>
        /// field1Configuration. The name of the field which should be
        /// exported to Text in DATEV. If not set external number(Externe
        /// Belegnummer) is used. Possible values include: 'Belegnummer',
        /// 'Externe Belegnummer'
        /// </summary>
        [JsonProperty(PropertyName = "field1Configuration")]
        public string Field1Configuration { get; set; }

        /// <summary>
        /// exportStrategy. The way split entries are exported. If not set
        /// standard is used. Possible values include: 'Standard',
        /// 'Journalreihenfolge beachten'
        /// </summary>
        [JsonProperty(PropertyName = "exportStrategy")]
        public string ExportStrategy { get; set; }

        /// <summary>
        /// skipCancellations. Do you want to export cancellation postings?
        /// </summary>
        [JsonProperty(PropertyName = "skipCancellations")]
        public bool? SkipCancellations { get; set; }

        /// <summary>
        /// vatMatrixDatevKeys. Do you want to use the DATEV posting keys
        /// (BU-Schlüssel) from Scopevisios vat matrix? Standard value is
        /// true.
        /// </summary>
        [JsonProperty(PropertyName = "vatMatrixDatevKeys")]
        public bool? VatMatrixDatevKeys { get; set; }

    }
}
