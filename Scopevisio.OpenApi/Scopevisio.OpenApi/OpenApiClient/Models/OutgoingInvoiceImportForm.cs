// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CompuMaster.Scopevisio.OpenApi.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class OutgoingInvoiceImportForm
    {
        /// <summary>
        /// Initializes a new instance of the OutgoingInvoiceImportForm class.
        /// </summary>
        public OutgoingInvoiceImportForm() { }

        /// <summary>
        /// Initializes a new instance of the OutgoingInvoiceImportForm class.
        /// </summary>
        public OutgoingInvoiceImportForm(string data, bool? generateDocumentNumbers = default(bool?), bool? doPost = default(bool?), bool? skipDuplicates = default(bool?), bool? createPdf = default(bool?), string template = default(string), bool? copyProductToPosition = default(bool?), bool? copyProductToPositionOverwriteMode = default(bool?), bool? copyImpersonalAccountFieldsToPosition = default(bool?))
        {
            GenerateDocumentNumbers = generateDocumentNumbers;
            DoPost = doPost;
            SkipDuplicates = skipDuplicates;
            CreatePdf = createPdf;
            Template = template;
            CopyProductToPosition = copyProductToPosition;
            CopyProductToPositionOverwriteMode = copyProductToPositionOverwriteMode;
            CopyImpersonalAccountFieldsToPosition = copyImpersonalAccountFieldsToPosition;
            Data = data;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "generateDocumentNumbers")]
        public bool? GenerateDocumentNumbers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "doPost")]
        public bool? DoPost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "skipDuplicates")]
        public bool? SkipDuplicates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createPdf")]
        public bool? CreatePdf { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "template")]
        public string Template { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "copyProductToPosition")]
        public bool? CopyProductToPosition { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "copyProductToPositionOverwriteMode")]
        public bool? CopyProductToPositionOverwriteMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "copyImpersonalAccountFieldsToPosition")]
        public bool? CopyImpersonalAccountFieldsToPosition { get; set; }

        /// <summary>
        /// XML import document
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public string Data { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Data == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Data");
            }
        }
    }
}
